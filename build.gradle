plugins {
    id 'java'
    id 'groovy'
    id 'idea'
    id 'eclipse'
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

group = "com.toastcoders"
archivesBaseName = "yavijava"
version = '6.0.05-jakarta'

targetCompatibility = 11
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven {
        url = uri("https://repo1.maven.org/maven2")
    }
}

dependencies {
    implementation 'org.apache.directory.studio:org.dom4j.dom4j:1.6.1'
    implementation 'log4j:log4j:1.2.17'
    implementation 'org.apache.httpcomponents:httpclient:4.3.5'
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.1'
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'    
    testImplementation 'javax.servlet:javax.servlet-api:3.1.0'
    testImplementation 'junit:junit-dep:4.11'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.spockframework:spock-core:0.7-groovy-2.0'
    testImplementation 'cglib:cglib-nodep:3.1'
    testImplementation 'org.objenesis:objenesis:2.1'
}

sourceSets {

    main {
        java {
        }
        resources {
            srcDir '.'
            include 'License.txt'
        }
    }

    intTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
        }
        groovy {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
        }
    }

    test {
        java {
        }
        groovy {
        }
    }
}

configurations {
    intTestCompile.extendsFrom testCompile
    intTestRuntime.extendsFrom testRuntime
}

task intTest(type:Test){
    description = "Run integration tests (located in src/intTest/...)."
    testClassesDirs = project.sourceSets.intTest.compileClasspath
    classpath = project.sourceSets.intTest.runtimeClasspath
}

test {
    testLogging {
        events 'started', 'passed'
    }
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

jar {
    manifest {
        attributes(
            'Build-Timestamp'        : new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
            'Created-By'             : "Gradle ${gradle.gradleVersion}",
            'Build-Jdk'              : "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
            'Implementation-Title'   : "YAVI Java API",
            'Implementation-Version' : "${version}",
            'Implementation-URL'     : "https://github.com/mspies00/yavijava"   
        )
    }
}

artifacts {
    archives javadocJar, sourcesJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = '${archivesBaseName}'
            groupId = '${group}'
            version = '${version}'
            from components.java
            pom {
                name = '${archivesBaseName}'
                // optionally artifactId can be defined here
                description = 'Java library for VMware vSphere'
                url = 'https://github.com/mspies00/yavijava'

                scm {
                    connection = 'scm:git:https://github.com/mspies00/yavijava.git'
                    developerConnection = 'scm:git:https://github.com/mspies00/yavijava.git'
                    url = 'https://github.com/mspies00/yavijava'
                }

                licenses {
                    license {
                        name = 'BSD'
                        url = 'http://opensource.org/licenses/BSD-3-Clause'
                    }
                }

                developers {
                    developer {
                        id = 'michaelrice'
                        name = 'Michael Rice'
                        email = 'michael@michaelrice.org'
                    }
                }
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

tasks.named('test', Test) {
    jvmArgs(
        '--add-opens', 'java.base/java.lang=ALL-UNNAMED',
        '--add-opens', 'java.base/java.io=ALL-UNNAMED',
        '--add-opens', 'java.base/java.net=ALL-UNNAMED',
        '--add-opens', 'java.base/java.util=ALL-UNNAMED'
    )
}

